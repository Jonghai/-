<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!-- https://juyoungit.tistory.com/306 -->
<!-- Mapper이 DAO와 비슷하게 사용하는 것 같음 -->
<mapper
	namespace="com.bjworld.groupware.customer.service.impl.CustomerMapper">
	
	<!-- 
	Mybatis관련 : https://mybatis.org/mybatis-3/ko/sqlmap-xml.html
	
	select구문은 마이바티스에서 가장 흔히 사용할 엘리먼트이다. 데이터베이스에서 데이터를 가져온다. 
	아마도 대부분의 애플리케이션은 데이터를 수정하기보다는 조회하는 기능이 많다.  
	-->
	
	<!-- parameterType : 구문에 전달될 파라미터의 패키지 경로를 포함한 전체 클래스명이나 별칭 -->
	<!-- 
	resultType : 
	이 구문에 의해 리턴되는 기대타입의 패키지 경로를 포함한 전체 클래스명이나 별칭. 
	collection인 경우 collection 타입 자체가 아닌 collection 이 포함된 타입이 될 수 있다. 
	resultType이나 resultMap을 사용하라. 
	-->

     <!-- SELECT문 : https://121202.tistory.com/26    
    
    SELECT select_list [ INTO new_table ]  
    [ FROM table_source ] [ WHERE search_condition ]  

    INTO 가 포함될 경우에는  
    조건에 맞는 기존 테이블의 열 내용을 새 테이블로 가져와 테이블을 만드는 겁니다. 
     -->
     
     

	<select id="selectCustomerList"	
		parameterType="com.bjworld.groupware.customer.service.impl.CustomerVO"
		resultType="com.bjworld.groupware.customer.service.impl.CustomerVO">
		/* selectCustomerList */
		SELECT
		seq as seq
		,cs_name as customerName		
		,cs_manager as customerManager
		,cs_rank as customerRank
		,cs_phone as customerPhone
		,cs_email as customerEmail
		FROM customer
        <!-- 1 = 1은 말그대로 참을 의미해요. 즉 전부 조회 -->
		WHERE 1=1

        <!-- <if test="seq != null and seq != ''">
			AND cs.seq = #{seq}
		</if>
					        
					            CONCAT 함수는 둘 이상의 문자열을 입력한 순서대로 합쳐서 반환해주는 함수입니다.            
					            ex)
					            SELECT CONCAT('안녕하세요.', '감사해요.', '잘있어요.', '다시만나요.') AS hello;
					       					
					        https://coding-factory.tistory.com/81
					
					            ex) 사원번호가 '0315' 이고 나이가 25살보다 작거나 이름이 '홍길동'인 사원 조회
					            SELECT * FROM My_Table WHERE No_Emp = '0315' AND (Age<25  OR Nm_Kor = '홍길동')
					
					            ex) 김이 들어가는 시작하는 사원 조회
					            SELECT * FROM My_Talbe WHERE Nm_Kor LIKE '%김%'
					          
					
					        출처: https://inforyou.tistory.com/28 [a battle with myself]  
					        
					            WHERE user_gender  = 'male' AND user_amount   >= 5500 ;
					            풀이 :  User_Table 에서 성별(user_gender)이 남자이고 보유금액(user_amount)가 5500 이상인 사람의 정보를 불러왔다.                      
					        

		<if test="customerName != null and customerName != ''">
			AND cs.cs_name like CONCAT('%', #{customerName}, '%')
		</if>
        <if test="customerManager != null and customerManager != ''">
			AND cs.cs_manager like CONCAT('%', #{customerManager}, '%')
		</if>
        <if test="customerRank != null and customerRank != ''">
			AND cs.cs_rank like CONCAT('%', #{customerRank}, '%')
		</if>
        <if test="customerPhone != null and customerPhone != ''">
			AND cs.cs_phone like CONCAT('%', #{customerPhone}, '%')
		</if>
        <if test="customerEmail != null and customerEmail != ''">
			AND cs.cs_email like CONCAT('%', #{customerEmail}, '%')
		</if>        --> 
	</select>

	<select id="selectCustomer"	resultType="com.bjworld.groupware.customer.service.impl.CustomerVO"
	parameterType="com.bjworld.groupware.customer.service.impl.CustomerVO">
		SELECT
		cs.seq as seq
		,cs.cs_name as customerName
		,cs.cs_manager as customerManager
		,cs.cs_rank as customerRank
		,cs.cs_phone as customerPhone
		,cs.cs_email as customerEmail
		FROM customer cs
		WHERE seq = #{seq}
	</select>


	<insert id="mergeCustomer" 
		parameterType="com.bjworld.groupware.customer.service.impl.CustomerVO">
		INSERT INTO customer
		(		
		cs_name
		,cs_manager
		,cs_rank
		,cs_phone
		,cs_email
		)
		VALUES
		(
		#{customerName}
		,#{customerManager}
		,#{customerRank}
		,#{customerPhone}
		,#{customerEmail}
		)
	</insert>
	<update id="updateCustomer"
		parameterType="com.bjworld.groupware.customer.service.impl.CustomerVO">
		/* updateCustomer */
		UPDATE customer
		set
		cs_name = #{customerName}
		,cs_manager = #{customerManager}		
		,cs_rank = #{customerRank}
		,cs_phone = #{customerPhone}
		,cs_email = #{customerEmail}		
		WHERE seq = #{seq}
	</update>
	
	<update id="deleteCustomer"
		parameterType="com.bjworld.groupware.customer.service.impl.CustomerVO">
		/* deleteCustomer */
		DELETE FROM customer
		WHERE seq = #{seq}
	</update>
	
	<select id="selectCustomerListTotCnt"
		parameterType="com.bjworld.groupware.customer.service.impl.CustomerVO"
		resultType="Integer">
		/* selectCustomerListTotCnt */
		SELECT COUNT(*)
		FROM customer
		WHERE 1 = 1
	</select>
	
</mapper>


<!-- Mybatis설명 https://java119.tistory.com/42?category=824525 -->
